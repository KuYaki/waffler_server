package db

import (
	"context"
	"fmt"
	"github.com/KuYaki/waffler_server/config"
	"github.com/jackc/pgx/v5/pgxpool"
)

func NewSqlDB(dbConf config.AppConf) (*pgxpool.Pool, error) {
	dbURL := fmt.Sprintf("postgres://%s:%s@%s:%s/%s",
		dbConf.DB.User, dbConf.DB.Password, dbConf.DB.Host, dbConf.DB.Port, dbConf.DB.Name)
	conn, err := pgxpool.New(context.Background(), dbURL)
	if err != nil {
		return nil, err
	}

	err = conn.Ping(context.Background())
	if err != nil {
		return nil, err
	}

	return conn, nil
}

func CreateSchemeDB(conn *pgxpool.Pool) error {

	_, err := conn.Exec(context.Background(),
		`CREATE TABLE IF NOT EXISTS users (
			id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
			username char(32),
			password_hash varchar(60),
			parser_token char(51),
			parser_type varchar(60),
			locale varchar(10))                                 ;`)

	_, err = conn.Exec(context.Background(),
		`CREATE TABLE IF NOT EXISTS sources (
			id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
			name varchar(32),
			source_type int,
			source_url varchar(51),
			waffel_score int
);`)

	_, err = conn.Exec(context.Background(),
		`CREATE TABLE IF NOT EXISTS records (
			id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
			source_id BIGINT,
			record_text TEXT,
			score int,
			created_at timestamp
);`)
	return err
}
