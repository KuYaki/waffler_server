# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        
    - name: Verify dependencies
      run: go mod verify
      
    - name: test_compilation
      run: go build -o test_compilation cmd/api/main.go
      
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.54
    
    - name: run-test
      run: go test -v ./...
      
  deploy:
#    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run command on remote server
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{secrets.SSH_HOST}}
          user: ${{secrets.SSH_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
          command: |
            cd ./waffler_server;
            git checkout master;
            git pull;
            docker-compose --file Docker-compose.yaml down;
            docker system prune --all --force;
            docker-compose --file Docker-compose.yaml up -d;
            
    
