# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches:
      - master
      - test
  pull_request:
    branches:
      - master
      - test

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        
    - name: Verify dependencies
      run: go mod verify
      
    - name: test_compilation
      run: go build -o test_compilation cmd/api/main.go
      
#    - name: golangci-lint
#      uses: golangci/golangci-lint-action@v3
#      with:
#        version: v1.54

    - name: run-test
      run: go test -v -tags=unit ./...

    - name: test integration
      run: go test -v -tags=integration ./...

  deploy_master:
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployments/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/waffler_server:latest
          
      - name: Run command on remote server
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{secrets.SSH_HOST}}
          user: ${{secrets.SSH_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
          command:
            cd ./waffler_server/waffler_server;
            git checkout master;
            git pull;
            docker-compose --file ./deployments/Docker-compose.yaml down;
            docker system prune --all --force;
            docker-compose --file ./deployments/Docker-compose.yaml up -d;

  deploy_test:
    if: github.ref == 'refs/heads/test'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployments/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/waffler_server_test:latest

      - name: Run command on remote server
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{secrets.SSH_HOST}}
          user: ${{secrets.SSH_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
          command:
            cd ./waffler_server_test/waffler_server;
            git checkout test;
            git pull;
            docker-compose --file ./deployments/Docker-compose_test.yaml down;
            docker system prune --all --force;
            docker-compose --file ./deployments/Docker-compose_test.yaml up -d;
    
